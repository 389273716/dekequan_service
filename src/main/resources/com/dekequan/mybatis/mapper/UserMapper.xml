<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dekequan.dao.user.UserDao">
    <resultMap id="user" type="User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		<result column="rank" property="rank" jdbcType="INTEGER" />
		<result column="level" property="level" jdbcType="INTEGER" />
		<result column="img" property="img" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="access_token" property="accessToken" jdbcType="VARCHAR" />
		<result column="dk_token" property="dkToken" jdbcType="VARCHAR" />
		<result column="expire_time" property="expireTime" jdbcType="TIMESTAMP" />
		<result column="sex" property="sex" jdbcType="CHAR" />
    </resultMap>
    
    <resultMap type="SimpleUser" id="simpleUser">
        <result property="userId" column="user_id" />
        <result property="userName" column="password" />
        <result property="nickName" column="nick_name" />
        <result property="rank" column="rank" />
        <result property="level" column="level" />
        <result property="img" column="img" />
        <result property="sex" column="sex" />
    </resultMap>

	<sql id="User_Column_List" >
		user_id, user_name, password, nick_name, rank, level, img, create_time, access_token,
		dk_token, expire_time, sex
	</sql>
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复 使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型 
		resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回 User类就是users表所对应的实体类 -->
	<!-- 用户账号密码查询 -->
	<select id="findUserByLogin" parameterType="java.util.Map" resultMap="user">
		select
		<include refid="User_Column_List" />
		from dk_user where user_name=#{userName,jdbcType=VARCHAR}
		<if test="password != null">
			and password=#{password,jdbcType=VARCHAR};
		</if>
	</select>
		
	<!-- 根据id查询得到一个user对象 -->
	<select id="findUserById" parameterType="int" resultMap="user">
		select <include refid="User_Column_List" /> from dk_user where user_id = #{userId}
	</select>
	
		<!-- 根据id查询得到一个simpleUser对象 -->
	<select id="fetchSimpleUserById" parameterType="int" resultMap="simpleUser">
		select <include refid="User_Column_List" /> from dk_user where user_id = #{userId}
	</select>
<!-- 	根据token获取一个用户数据 -->
	<select id="fetchSimpleUserByToken" parameterType="java.lang.String" resultMap="simpleUser">
		select <include refid="User_Column_List"/> from dk_user where dk_token = #{dkToken}
	</select>
	
	<!-- 新增 -->
	<insert id="saveUser" parameterType="User">
		insert into dk_user (
		user_name, password, nick_name,
		rank, level, img, 
		create_time, access_token, dk_token,
		expire_time, sex)
		values(
		#{userName}, #{password}, #{nickName}, 
		#{rank}, #{level}, #{img}, 
		#{createTime}, #{accessToken}, #{dkToken}, 
		#{expireTime}, #{sex})
	</insert>
	
	<!-- 修改失效时间 -->
	<update id="updateUserExpireTime" parameterType="Map">
	    update dk_user set expire_time = #{expireTime} where userId = #{userId}
	</update>
	
	<!-- 修改个人信息 -->
	<update id="updateUser" parameterType="Map">
	    update dk_user set nick_name = #{nickName}, sex = #{sex}, img = #{img} where userId = #{id}
	</update>
</mapper>