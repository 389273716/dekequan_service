<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- 扫描包 -->
	<context:component-scan base-package="com.dekequan.service" />
    
	<context:property-placeholder
		location="classpath:com/dekequan/conf/mysql.properties" />

	<!-- 数据池连接 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${dk.user.name}" />
		<property name="password" value="${dk.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initial.size}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${max.active}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${max.idle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${min.idle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${max.wait}"></property>
	</bean>

	<!-- 配置session工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation"
			value="classpath:com/dekequan/mybatis/myBatis-config.xml" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations">
			<list>
				<value>classpath:com/dekequan/mybatis/mapper/*Mapper.xml</value>
			</list>
		</property>
	</bean>

	<!-- 配置SessionTemplate，已封装了繁琐的数据操作-->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
	</bean>

	<!-- 配置事务管理器,管理数据源事务处理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="advice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 默认只处理运行时异常，可加rollback-for="Exception/Throwable"等处理所有异常或包括错误 -->
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<!-- 配置切面织入的范围,把事务边界定在service层 -->
	<aop:config>
		<aop:advisor advice-ref="advice"
			pointcut="execution(* com.dekequan.service.*.*(..))" />
	</aop:config>

	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dekequan.dao" />
		<property name="markerInterface" value="com.dekequan.library.dao.AbstractDao"/>
	</bean>
	
</beans>